openapi: 3.0.0
info:
    title: Application API
    description: API for managing user authentication and applications
    version: 1.0.0
paths:
    /auth/register:
        post:
            summary: Register a new user
            description: Endpoint to register a new user by providing their name, email, and password.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: The name of the user
                                email:
                                    type: string
                                    description: The email of the user
                                password:
                                    type: string
                                    description: The password of the user
            responses:
                "201":
                    description: User registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                "400":
                    description: User already exists
                "500":
                    description: Server error

    /auth/login:
        post:
            summary: Login a user
            description: Endpoint to login a user using email and password.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: The email of the user
                                password:
                                    type: string
                                    description: The password of the user
            responses:
                "200":
                    description: Successful login with a JWT token
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                        description: The JWT token for the authenticated user
                "400":
                    description: Invalid credentials
                "500":
                    description: Server error

    /application/create:
        post:
            summary: Create a new application
            description: Endpoint for creating a new application by the authenticated user.
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    description: The username for the application
                                email:
                                    type: string
                                    description: The email associated with the application
                                income:
                                    type: number
                                    format: float
                                    description: The income value for the application
                                expenses:
                                    type: number
                                    format: float
                                    description: The expenses value for the application
                                assets:
                                    type: number
                                    format: float
                                    description: The assets value for the application
                                liabilities:
                                    type: number
                                    format: float
                                    description: The liabilities value for the application
            responses:
                "201":
                    description: Application created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    _id:
                                        type: string
                                        description: The ID of the created application
                "401":
                    description: Unauthorized access, no token provided or invalid token
                "500":
                    description: Server error

    /application/all:
        get:
            summary: Get all applications for the authenticated user
            description: Endpoint to fetch all applications submitted by the authenticated user.
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: List of all applications
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        _id:
                                            type: string
                                            description: The ID of the application
                                        username:
                                            type: string
                                            description: The username in the application
                                        email:
                                            type: string
                                            description: The email in the application
                                        income:
                                            type: number
                                            format: float
                                            description: The income in the application
                                        expenses:
                                            type: number
                                            format: float
                                            description: The expenses in the application
                                        assets:
                                            type: number
                                            format: float
                                            description: The assets in the application
                                        liabilities:
                                            type: number
                                            format: float
                                            description: The liabilities in the application
                "401":
                    description: Unauthorized access, no token provided or invalid token
                "500":
                    description: Server error

    /application/get/{id}:
        get:
            summary: Get a specific application by ID
            description: Fetch a specific application using its ID.
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the application to fetch
                  schema:
                      type: string
            responses:
                "200":
                    description: The application object
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    _id:
                                        type: string
                                        description: The ID of the application
                                    username:
                                        type: string
                                        description: The username in the application
                                    email:
                                        type: string
                                        description: The email in the application
                                    income:
                                        type: number
                                        format: float
                                        description: The income in the application
                                    expenses:
                                        type: number
                                        format: float
                                        description: The expenses in the application
                                    assets:
                                        type: number
                                        format: float
                                        description: The assets in the application
                                    liabilities:
                                        type: number
                                        format: float
                                        description: The liabilities in the application
                "404":
                    description: Application not found
                "401":
                    description: Unauthorized access, no token provided or invalid token
                "500":
                    description: Server error

    /application/update/{id}:
        put:
            summary: Update an existing application
            description: Update a specific application by its ID.
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the application to update
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    description: The updated username for the application
                                email:
                                    type: string
                                    description: The updated email for the application
                                income:
                                    type: number
                                    format: float
                                    description: The updated income for the application
                                expenses:
                                    type: number
                                    format: float
                                    description: The updated expenses for the application
                                assets:
                                    type: number
                                    format: float
                                    description: The updated assets for the application
                                liabilities:
                                    type: number
                                    format: float
                                    description: The updated liabilities for the application
            responses:
                "200":
                    description: Application updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    _id:
                                        type: string
                                        description: The updated application ID
                "404":
                    description: Application not found
                "401":
                    description: Unauthorized access, no token provided or invalid token
                "500":
                    description: Server error

    /application/delete/{id}:
        delete:
            summary: Delete a specific application
            description: Delete a specific application by its ID.
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  description: The ID of the application to delete
                  schema:
                      type: string
            responses:
                "200":
                    description: Application deleted successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        description: Success message
                "404":
                    description: Application not found
                "401":
                    description: Unauthorized access, no token provided or invalid token
                "500":
                    description: Server error

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
